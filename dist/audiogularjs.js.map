{"version":3,"sources":["temp/app.js"],"names":[],"mappings":"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","file":"temp/app.js","sourcesContent":["angular.module(\"audiogularjs\", []);\r\n/**\r\n * This class is responsible of managing the Audio State\r\n * @author Joseph El Alam <joseph@vinelab.com>\r\n */\r\nclass AudiogularState {\r\n\r\n\r\n    constructor() {\r\n\r\n        this.STATE_PLAYING = 'playing';\r\n        this.STATE_STOPPED = 'stopped';\r\n        this.STATE_PAUSED = 'paused';\r\n    }\r\n\r\n    /**\r\n     * Get the state of the audio of the given src\r\n     * with comparison of the current audio\r\n     *\r\n     * @param currentAudio\r\n     * @param src\r\n     * @returns {string}\r\n     */\r\n    getState(currentAudio, src) {\r\n        return (currentAudio.src === src && !currentAudio.paused) ? this.STATE_PLAYING : this.STATE_STOPPED;\r\n    }\r\n\r\n\r\n}\r\nclass Audiogular {\r\n\r\n    constructor() {\r\n        this.audio = new Audio();\r\n        return this.audio;\r\n    }\r\n\r\n}\r\n/**\r\n * This class is responsible for managing the UI,\r\n * acts as controller of the directive\r\n * @author Joseph El Alam <joseph@vinelab.com>\r\n */\r\nclass AudiogularController {\r\n\r\n    constructor(AudiogularjsService, src) {\r\n        this.AudiogularjsService = AudiogularjsService;\r\n        this.state = new AudiogularState();\r\n        this.src = src;\r\n\r\n        this.CSS_PREFIX = 'audiogularjs';\r\n        this.STATE_MAP = [];\r\n        this.STATE_MAP[this.state.STATE_PLAYING]= 'is-playing';\r\n        this.STATE_MAP[this.state.STATE_PAUSED]= 'is-paused';\r\n        this.STATE_MAP[this.state.STATE_STOPPED]= 'is-stopped';\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Get the CSS class name for the current state of the audio.\r\n     * @return {string}\r\n     */\r\n    getCssClass() {\r\n        let state;\r\n        if (this.AudiogularjsService.isPlaying(this.src)) {\r\n            state = this.getPlayingCssClass();\r\n        } else {\r\n            state = this.getStoppedCssClass();\r\n        }\r\n        return state;\r\n    }\r\n\r\n    getPlayingCssClass() {\r\n        return this.getClassForState(this.state.STATE_PLAYING);\r\n    }\r\n\r\n    getStoppedCssClass() {\r\n        return this.getClassForState(this.state.STATE_STOPPED);\r\n    }\r\n\r\n    getPausedCssClass() {\r\n        return this.getClassForState(this.state.STATE_PAUSED);\r\n    }\r\n\r\n    getClassForState(state) {\r\n        return `${ this.CSS_PREFIX }-${ this.STATE_MAP[state] }`;\r\n    }\r\n\r\n    /**\r\n     * Play or stop the Audio depending on its state.\r\n     * @return {string}\r\n     */\r\n    playOrStop() {\r\n        if (this.AudiogularjsService.isPlaying(this.src)) {\r\n            this.AudiogularjsService.stop();\r\n        } else {\r\n            this.AudiogularjsService.stop();\r\n            this.AudiogularjsService.playBySource(this.src);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * This class is responsible for managing the audio,\r\n * acts as service in audiogularjs component\r\n * @author Joseph El Alam <joseph@vinelab.com>\r\n */\r\nclass AudiogularPlayer {\r\n\r\n    /**\r\n     * construct the class and\r\n     * Initialise the audio object using HTML Audio Element Javascript object\r\n     * @var {Audio} the audio object being managed, by default init the Audio\r\n     */\r\n    constructor() {\r\n        this.audio = new Audiogular();\r\n        this.state = new AudiogularState();\r\n    }\r\n\r\n    /**\r\n     * Play the audio by source\r\n     * @param src\r\n     */\r\n    playBySource(src) {\r\n        this.setSource(src);\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * Set the source for the audio object\r\n     */\r\n    setSource(src) {\r\n        this.audio.src = src;\r\n    }\r\n\r\n    /**\r\n     * Play the audio\r\n     */\r\n    play() {\r\n        this.audio.play();\r\n    }\r\n\r\n\r\n    /**\r\n     * Stop tha audio\r\n     */\r\n    stop() {\r\n        this.audio.pause();\r\n    }\r\n\r\n    /**\r\n     * Reset the audio\r\n     */\r\n    reset() {\r\n        this.audio.load();\r\n    }\r\n\r\n    isPlaying(src) {\r\n        return this.state.getState(this.audio, src) === this.state.STATE_PLAYING;\r\n    }\r\n}\r\nangular.module(\"audiogularjs\").directive(\"audiogularjsPlay\", audiogularjsPlay);\r\n\r\nfunction audiogularjsPlay() {\r\n    return {\r\n        restrict: \"EA\",\r\n        scope: {\r\n            \"src\": \"@\"\r\n        },\r\n        replace: true,\r\n        require: \"audiogularjsPlay\",\r\n        template: '<div ng-class=\"audioPlayCtrl.getCssClass()\"><div>',\r\n        bindToController: true,\r\n        controller: AudiogularController,\r\n        controllerAs: 'audioPlayCtrl',\r\n        link: AudiogularjsServiceLink\r\n    };\r\n}\r\n\r\nAudiogularController.$inject = ['AudiogularjsService'];\r\nfunction AudiogularjsServiceLink(scope, element, attrs, ctrls) {\r\n    element.on(\"click\", function () {\r\n        ctrls.playOrStop();\r\n        scope.$apply();\r\n    });\r\n    scope.$on('$destroy', function () {\r\n        AudiogularjsService.reset();\r\n    });\r\n}\r\nangular.module(\"audiogularjs\").service(\"AudiogularjsService\", AudiogularPlayer);"]}